// Code generated by ifacemaker; DO NOT EDIT.

package hcloud

import (
	"context"
)

// IStorageBoxClient ...
type IStorageBoxClient interface {
	// GetByID retrieves a storage box by its ID. If the storage box does not exist, nil is returned.
	GetByID(ctx context.Context, id int64) (*StorageBox, *Response, error)
	// GetByName retrieves a storage box by its name. If the storage box does not exist, nil is returned.
	GetByName(ctx context.Context, name string) (*StorageBox, *Response, error)
	// Get retrieves a storage box by its ID if the input can be parsed as an integer, otherwise it
	// retrieves a storage box by its name. If the storage box does not exist, nil is returned.
	Get(ctx context.Context, idOrName string) (*StorageBox, *Response, error)
	// List returns a list of storage boxes for a specific page.
	//
	// Please note that filters specified in opts are not taken into account
	// when their value corresponds to their zero value or when they are empty.
	List(ctx context.Context, opts StorageBoxListOpts) ([]*StorageBox, *Response, error)
	// All returns all storage boxes.
	All(ctx context.Context) ([]*StorageBox, error)
	// AllWithOpts returns all storage boxes with the given options.
	AllWithOpts(ctx context.Context, opts StorageBoxListOpts) ([]*StorageBox, error)
	// Create creates a new storage box with the given options.
	Create(ctx context.Context, opts StorageBoxCreateOpts) (StorageBoxCreateResult, *Response, error)
	// Update updates a storage box with the given options.
	Update(ctx context.Context, storageBox *StorageBox, opts StorageBoxUpdateOpts) (*StorageBox, *Response, error)
	// Delete deletes a storage box.
	Delete(ctx context.Context, storageBox *StorageBox) (*Action, *Response, error)
	// Folders lists folders in a storage box.
	Folders(ctx context.Context, storageBox *StorageBox, opts StorageBoxFoldersOpts) (StorageBoxFoldersResult, *Response, error)
	// ChangeProtection changes the protection level of a storage box.
	ChangeProtection(ctx context.Context, storageBox *StorageBox, opts StorageBoxChangeProtectionOpts) (*Action, *Response, error)
	// ChangeType changes the type of a storage box.
	ChangeType(ctx context.Context, storageBox *StorageBox, opts StorageBoxChangeTypeOpts) (*Action, *Response, error)
	// ResetPassword resets the password of a storage box.
	ResetPassword(ctx context.Context, storageBox *StorageBox, opts StorageBoxResetPasswordOpts) (*Action, *Response, error)
	// UpdateAccessSettings updates the access settings of a storage box.
	UpdateAccessSettings(ctx context.Context, storageBox *StorageBox, opts StorageBoxUpdateAccessSettingsOpts) (*Action, *Response, error)
	// RollbackSnapshot rolls back a storage box to a snapshot.
	RollbackSnapshot(ctx context.Context, storageBox *StorageBox, opts StorageBoxRollbackSnapshotOpts) (*Action, *Response, error)
	// EnableSnapshotPlan enables a snapshot plan for a storage box.
	EnableSnapshotPlan(ctx context.Context, storageBox *StorageBox, opts StorageBoxEnableSnapshotPlanOpts) (*Action, *Response, error)
	// DisableSnapshotPlan disables the snapshot plan for a storage box.
	DisableSnapshotPlan(ctx context.Context, storageBox *StorageBox) (*Action, *Response, error)
}
